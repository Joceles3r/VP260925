import os, json, time
BASE = os.getenv("DATA_DIR", "var/data")
os.makedirs(BASE, exist_ok=True)
EV_PATH = os.path.join(BASE, "stripe_events.jsonl")
PLAN_PATH = os.path.join(BASE, "payout_plans.jsonl")

def is_already_processed(event_id: str) -> bool:
    if not os.path.exists(EV_PATH): return False
    with open(EV_PATH, "r", encoding="utf-8") as f:
        for line in f:
            try:
                obj = json.loads(line)
                if obj.get("event_id") == event_id and obj.get("processed"):
                    return True
            except Exception:
                continue
    return False

def upsert_stripe_event(event_id: str, type_: str, raw: dict, processed: bool):
    with open(EV_PATH, "a", encoding="utf-8") as f:
        f.write(json.dumps({"ts": int(time.time()), "event_id": event_id, "type": type_, "processed": processed, "raw": raw}) + "\n")

def persist_payout_plan(source_event_id: str, kind: str, plan: list, raw: dict):
    rec = {"ts": int(time.time()), "source_event_id": source_event_id, "kind": kind, "plan": [vars(x) for x in plan], "raw": raw}
    with open(PLAN_PATH, "a", encoding="utf-8") as f:
        f.write(json.dumps(rec) + "\n")
    return rec
