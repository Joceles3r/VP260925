# Nginx Security Headers for VISUAL (CSP/STS/Referrer/Permissions)
# Place under: infra/nginx/security_headers.conf
# Include from your server block with:  include /etc/nginx/conf.d/security_headers.conf;

# --- HSTS (HTTPS required) ---
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

# --- Content Security Policy (minimal safe default) ---
# Adjust sources to your CDN(s), analytics, video hosts (e.g., Bunny, Stripe JS, Sentry):
# Example allow-list tokens: https://*.bunnycdn.com https://js.stripe.com https://*.sentry.io
set $csp_default "default-src 'self';";
set $csp_connect "connect-src 'self' https: wss:;";
set $csp_img     "img-src 'self' data: https:;";
set $csp_media   "media-src https:;";
set $csp_script  "script-src 'self' 'unsafe-inline' 'unsafe-eval' https:;";
set $csp_style   "style-src 'self' 'unsafe-inline' https:;";
set $csp_font    "font-src 'self' data: https:;";
set $csp_frame   "frame-ancestors 'none';";
set $csp_base    "base-uri 'self';";
set $csp_form    "form-action 'self' https:;";
add_header Content-Security-Policy "$csp_default $csp_connect $csp_img $csp_media $csp_script $csp_style $csp_font $csp_frame $csp_base $csp_form" always;

# --- MIME sniffing / clickjacking / referrer ---
add_header X-Content-Type-Options nosniff always;
add_header X-Frame-Options DENY always;
add_header Referrer-Policy strict-origin-when-cross-origin always;

# --- Permissions-Policy (turn off device features by default) ---
add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=()" always;

# --- Cache & CORS (optional, tailor per route) ---
# add_header Access-Control-Allow-Origin "*";
# add_header Access-Control-Allow-Methods "GET, OPTIONS";
