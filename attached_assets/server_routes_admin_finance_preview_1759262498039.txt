from fastapi import APIRouter, Body, Depends, HTTPException
from typing import Dict, Any
from server.revenue.engine import sale_article_split, category_closure_split, preview_totals
from server.security.deps import require_admin

router = APIRouter(prefix="/api/admin/finance", tags=["admin-finance"])

@router.post("/preview-split")
def preview_split(payload: Dict[str, Any] = Body(...), admin=Depends(require_admin)):
    scenario = payload.get("scenario")
    if scenario == "article":
        price_eur = float(payload["price_eur"])
        price_cents = int(round(price_eur * 100))
        porter = payload["porter_account_id"]
        visual = payload["visual_account_id"]
        plan = sale_article_split(price_cents, porter, visual)
        return {"plan": [vars(x) for x in plan], "totals": preview_totals(plan)}
    elif scenario == "category":
        S_eur = float(payload["pot_eur"])
        S_cents = int(round(S_eur * 100))
        inv_top10 = payload.get("investor_top10_accounts", [])
        port_top10 = payload.get("porter_top10_accounts", [])
        inv_11_100 = payload.get("investor_ranks_11_100_accounts", [])
        visual = payload["visual_account_id"]
        plan = category_closure_split(S_cents, inv_top10, port_top10, inv_11_100, visual)
        return {"plan": [vars(x) for x in plan], "totals": preview_totals(plan)}
    else:
        raise HTTPException(400, "scenario must be 'article' or 'category'")
