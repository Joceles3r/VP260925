"use client";
import React, { useState } from "react";

export function FinancePreviewCard(){
  const [scenario, setScenario] = useState<"article"|"category">("article");
  const [price, setPrice] = useState("9.99");
  const [pot, setPot] = useState("10000");
  const [result, setResult] = useState<any>(null);

  async function run(){
    const payload:any = { scenario };
    if(scenario==="article"){
      payload.price_eur = parseFloat(price);
      payload.porter_account_id = "acc_porter_1";
      payload.visual_account_id = "acc_visual";
    } else {
      payload.pot_eur = parseFloat(pot);
      payload.visual_account_id = "acc_visual";
      payload.investor_top10_accounts = ["acc_inv1","acc_inv2","acc_inv3","acc_inv4","acc_inv5","acc_inv6","acc_inv7","acc_inv8","acc_inv9","acc_inv10"];
      payload.porter_top10_accounts = ["acc_port1","acc_port2","acc_port3","acc_port4","acc_port5","acc_port6","acc_port7","acc_port8","acc_port9","acc_port10"];
      payload.investor_ranks_11_100_accounts = Array.from({length:90}).map((_,i)=>"acc_inv_"+(i+11));
    }
    const r = await fetch("/api/admin/finance/preview-split", { method: "POST", headers: { "Content-Type": "application/json" }, credentials: "include", body: JSON.stringify(payload)});
    const data = await r.json();
    setResult(data);
  }

  return (
    <div className="rounded-2xl border border-fuchsia-500/30 p-5 bg-gradient-to-b from-cyan-500/5 to-transparent">
      <div className="flex items-center justify-between mb-3">
        <h3 className="text-lg font-semibold">ðŸ’¸ PrÃ©visualisation des splits</h3>
        <select value={scenario} onChange={e=>setScenario(e.target.value as any)} className="bg-black/40 border border-fuchsia-500/30 rounded px-2 py-1">
          <option value="article">Vente dâ€™article</option>
          <option value="category">ClÃ´ture de catÃ©gorie</option>
        </select>
      </div>
      {scenario==="article" ? (
        <div className="flex gap-3 mb-3">
          <label className="text-sm">Prix (â‚¬)
            <input className="ml-2 bg-black/40 border border-fuchsia-500/30 rounded px-2 py-1" value={price} onChange={e=>setPrice(e.target.value)} />
          </label>
        </div>
      ) : (
        <div className="flex gap-3 mb-3">
          <label className="text-sm">Pot S (â‚¬)
            <input className="ml-2 bg-black/40 border border-fuchsia-500/30 rounded px-2 py-1" value={pot} onChange={e=>setPot(e.target.value)} />
          </label>
        </div>
      )}
      <button onClick={run} className="px-3 py-1 rounded bg-fuchsia-600 hover:bg-fuchsia-500">Calculer</button>

      {result && (
        <div className="mt-4 space-y-3">
          <div className="text-sm opacity-80">Totals (centimes)</div>
          <pre className="text-xs bg-black/40 p-2 rounded border border-fuchsia-500/30">{JSON.stringify(result.totals, null, 2)}</pre>
          <div className="text-sm opacity-80">Plan</div>
          <pre className="text-xs bg-black/40 p-2 rounded border border-fuchsia-500/30 max-h-64 overflow-auto">{JSON.stringify(result.plan, null, 2)}</pre>
        </div>
      )}
    </div>
  );
}
